{"version":3,"sources":["../../src/api/items.js"],"names":["require","config","db","api","wrap","fn","catch","get","req","res","all","items","json"],"mappings":"AAAA;;;;;;AAGA;;;;AAFAA,QAAQ,gBAAR;;kBAIe,gBAAoB;AAAA,KAAjBC,MAAiB,QAAjBA,MAAiB;AAAA,KAATC,EAAS,QAATA,EAAS;;AAClC,KAAIC,MAAM,sBAAV;;AAEA,KAAIC,OAAO,SAAPA,IAAO;AAAA,SAAM;AAAA,UAAaC,+BAAYC,KAAZ,kDAAb;AAAA,GAAN;AAAA,EAAX;;AAEAH,KAAII,GAAJ,CAAQ,GAAR,EAAaH;AAAA,sEAAK,iBAAOI,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACGP,GAAGQ,GAAH,CAAO,qBAAP,CADH;;AAAA;AACXC,YADW;;AAEjBF,WAAIG,IAAJ,CAASD,KAAT;;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAL;;AAAA;AAAA;AAAA;AAAA,KAAb;;AAKA,QAAOR,GAAP;AACA,C","file":"items.js","sourcesContent":["'use strict'\nrequire('babel-polyfill');\n\nimport { Router } from 'express';\n\nexport default ({ config, db }) => {\n\tlet api = Router();\n\t\n\tlet wrap = fn => (...args) => fn(...args).catch(args[2])\n\n\tapi.get('/', wrap(async (req, res) => {\n\t\tconst items = await db.all(\"SELECT * FROM ITEMS\");\n\t\tres.json(items);\n\t}));\n\n\treturn api;\n}"]}