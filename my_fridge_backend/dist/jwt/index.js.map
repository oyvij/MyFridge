{"version":3,"sources":["../../src/jwt/index.js"],"names":["jwtAuth","jwt","require","config","req","res","next","authHeader","headers","token","split","status","json","message","verify","secret","err","account","console","error"],"mappings":";;;;;QAKgBA,O,GAAAA,O;AALhB,IAAMC,MAAMC,QAAQ,cAAR,CAAZ;AACA,IAAMC,SAASD,QAAQ,WAAR,CAAf;;AAGA;AACO,SAASF,OAAT,CAAiBI,GAAjB,EAAsBC,GAAtB,EAA2BC,IAA3B,EAAiC;AACvC,KAAMC,aAAaH,IAAII,OAAJ,CAAY,eAAZ,CAAnB;AACA,KAAMC,QAAQF,cAAcA,WAAWG,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAA5B,CAFuC,CAEe;;AAEtD,KAAI,CAACD,KAAL,EAAY;AACX,SAAOJ,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,0CAAX,EAArB,CAAP;AACA;;AAEDZ,KAAIa,MAAJ,CAAWL,KAAX,EAAkBN,OAAOY,MAAzB,EAAiC,UAACC,GAAD,EAAMC,OAAN,EAAkB;AAClD,MAAID,GAAJ,EAAS;AACRE,WAAQC,KAAR,iCAA4CH,IAAIH,OAAhD;AACA,UAAOR,IAAIM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,mBAAX,EAArB,CAAP;AACA;AACDT,MAAIa,OAAJ,GAAcA,OAAd,CALkD,CAK3B;AACvBX;AACA,EAPD;AAQA","file":"index.js","sourcesContent":["const jwt = require('jsonwebtoken');\nconst config = require('../config');\n\n\n// Middleware to validate token and set account in request\nexport function jwtAuth(req, res, next) {\n\tconst authHeader = req.headers['authorization'];\n\tconst token = authHeader && authHeader.split(' ')[1]; // Bearer TOKEN_STRING\n\n\tif (!token) {\n\t\treturn res.status(401).json({ message: 'No token provided. Authorization denied.' });\n\t}\n\n\tjwt.verify(token, config.secret, (err, account) => {\n\t\tif (err) {\n\t\t\tconsole.error(`Token verification failed: ${err.message}`);\n\t\t\treturn res.status(403).json({ message: 'Token is invalid.' });\n\t\t}\n\t\treq.account = account; // set the account in the request\n\t\tnext();\n\t});\n}\n"]}