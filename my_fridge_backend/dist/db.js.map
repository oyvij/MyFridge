{"version":3,"sources":["../src/db.js"],"names":["require","Sequelize","config","sequelize","process","env","DATABASE_URL","dialect","dialectOptions","ssl","rejectUnauthorized","alter","sync","then","console","log","catch","error","module","exports"],"mappings":";;eAAsBA,QAAQ,WAAR,C;IAAdC,S,YAAAA,S;;AACRD,QAAQ,QAAR,EAAkBE,MAAlB;;AAEA,IAAMC,YAAY,IAAIF,SAAJ,CAAcG,QAAQC,GAAR,CAAYC,YAA1B,EAAwC;AACxDC,WAAS,UAD+C;AAExDC,kBAAgB;AACdC,SAAK;AACHT,eAAS,IADN;AAEHU,0BAAoB;AAFjB;AADS,GAFwC;AAQxDC,SAAO;AARiD,CAAxC,CAAlB;;AAWAR,UAAUS,IAAV,GAAiB;AAAjB,CACGC,IADH,CACQ,YAAM;AACVC,UAAQC,GAAR,CAAY,4CAAZ;AACD,CAHH,EAIGC,KAJH,CAIS,UAACC,KAAD,EAAW;AAChBH,UAAQG,KAAR,CAAc,+CAAd,EAA+DA,KAA/D;AACD,CANH;;AAQAC,OAAOC,OAAP,GAAiBhB,SAAjB","file":"db.js","sourcesContent":["const { Sequelize } = require('sequelize');\nrequire('dotenv').config()\n\nconst sequelize = new Sequelize(process.env.DATABASE_URL, {\n  dialect: 'postgres',\n  dialectOptions: {\n    ssl: {\n      require: true,\n      rejectUnauthorized: false\n    }\n  },\n  alter: true\n});\n\nsequelize.sync() // { force: true }\n  .then(() => {\n    console.log('All models were synchronized successfully.');\n  })\n  .catch((error) => {\n    console.error('An error occurred while synchronizing models:', error);\n  });\n\nmodule.exports = sequelize;"]}